version: '3.8'

services:
  match-service:
    build: ./match-service
    ports:
      - "8081:8080"
      - "5006:5005"
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-match:5432/match_db
      SPRING_DATASOURCE_USERNAME: match_user
      SPRING_DATASOURCE_PASSWORD: match_pass
      SPRING_FLYWAY_ENABLED: true
    depends_on:
      postgres-match:
        condition: service_healthy

  user-service:
    build: ./user-service
    ports:
      - "8082:8080"
      - "5007:5005"
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user:5432/user_db
      SPRING_DATASOURCE_USERNAME: user_user
      SPRING_DATASOURCE_PASSWORD: user_pass
      SPRING_FLYWAY_ENABLED: true
    depends_on:
      postgres-user:
        condition: service_healthy

#  notification-service:
#    build: ./notification-service
#    ports:
#      - "8083:8080"
#      - "5008:5005"
#    env_file:
#      - .env
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-notification:5432/notification_db
#      SPRING_DATASOURCE_USERNAME: notif_user
#      SPRING_DATASOURCE_PASSWORD: notif_pass
#      SPRING_FLYWAY_ENABLED: true
#    depends_on:
#      postgres-notification:
#        condition: service_healthy

  postgres-match:
    image: postgres:16
    container_name: postgres-match
    environment:
      POSTGRES_DB: match_db
      POSTGRES_USER: match_user
      POSTGRES_PASSWORD: match_pass
    ports:
      - "5436:5432"
    volumes:
      - pgdata-match:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U match_user -d match_db" ]
      interval: 5s
      timeout: 3s
      retries: 10

  postgres-user:
    image: postgres:16
    container_name: postgres-user
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: user_user
      POSTGRES_PASSWORD: user_pass
    ports:
      - "5434:5432"
    volumes:
      - pgdata-user:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user_user -d user_db" ]
      interval: 5s
      timeout: 3s
      retries: 10

  postgres-notification:
    image: postgres:16
    container_name: postgres-notification
    environment:
      POSTGRES_DB: notification_db
      POSTGRES_USER: notif_user
      POSTGRES_PASSWORD: notif_pass
    ports:
      - "5435:5432"
    volumes:
      - pgdata-notification:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U notif_user -d notification_db" ]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  pgdata-match:
  pgdata-user:
  pgdata-notification:
